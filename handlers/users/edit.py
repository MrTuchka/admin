from aiogram import types
from aiogram.dispatcher.filters.builtin import Command
from aiogram.types import CallbackQuery
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext
from states.edit_bot import edit_bott

from keyboards.inline.edit import edit_bot_buttons
from loader import dp
from utils.db_api.dbconfig import get_bot_id, get, get_button, get_button_ref, edit_bot, get_main


#–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É
@dp.message_handler(Command("edit"))
async def edit(message: types.Message):
    bot = await get_bot_id(message.from_user.id)
    if bot != '' and bot != "No data":
        bot_id = await get_bot_id(message.from_user.id)
        main = await get("bots", bot_id, "main")

        button1 = await get_button(bot_id, "1")
        ref1 = await get_button_ref(bot_id, "1")

        button2 = await get_button(bot_id, "2")
        ref2 = await get_button_ref(bot_id, "2")

        button3 = await get_button(bot_id, "3")
        ref3 = await get_button_ref(bot_id, "3")

        button4 = await get_button(bot_id, "4")
        ref4 = await get_button_ref(bot_id, "4")

        button5 = await get_button(bot_id, "5")
        ref5 = await get_button_ref(bot_id, "5")

        await message.answer(f"–í–∞—à –±–æ—Ç –≤–∏–≥–ª—è–¥–∞—î —Ç–∞–∫:\n\n"
                             f"<b>–ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b> {main}\n\n"
                             f"<b>–ö–Ω–æ–ø–∫–∞ 1:</b> {button1}\n"
                             f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {ref1}\n\n"
                             f"<b>–ö–Ω–æ–ø–∫–∞ 2:</b> {button2}\n"
                             f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {ref2}\n\n"
                             f"<b>–ö–Ω–æ–ø–∫–∞ 3:</b> {button3}\n"
                             f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {ref3}\n\n"
                             f"<b>–ö–Ω–æ–ø–∫–∞ 4:</b> {button4}\n"
                             f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {ref4}\n\n"
                             f"<b>–ö–Ω–æ–ø–∫–∞ 5:</b> {button5}\n"
                             f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {ref5}\n\n", parse_mode="html", reply_markup=edit_bot_buttons)
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")


@dp.callback_query_handler(Text('edit_main_text'))
async def edit_main(call: CallbackQuery, state: FSMContext):
    bot = await get_bot_id(call.message.chat.id)
    if bot != '' and bot != "No data":
        await call.message.answer("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –æ–ø–∏—Å—É.")
        await edit_bott.main.set()
        await state.update_data(message_id=call.message.message_id)
    else:
        await call.message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

@dp.message_handler(state=edit_bott.main)
async def edit_main_text(message: types.Message, state: FSMContext):
    data = await state.get_data()
    message_to_edit_id = data.get("message_id")

    bot = await get_bot_id(message.chat.id)
    if bot != '' and bot != "No data":
        try:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        except:
            pass

        try:
            await message.delete()
        except:
            pass
        bot_id = await get_bot_id(message.from_user.id)

        b1 = await get_button(bot_id, "1")
        r1 = await get_button_ref(bot_id, "1")

        b2 = await get_button(bot_id, "2")
        r2 = await get_button_ref(bot_id, "2")

        b3 = await get_button(bot_id, "3")
        r3 = await get_button_ref(bot_id, "3")

        b4 = await get_button(bot_id, "4")
        r4 = await get_button_ref(bot_id, "4")

        b5 = await get_button(bot_id, "5")
        r5 = await get_button_ref(bot_id, "5")

        await edit_bot(bot_id, message.text, b1, r1, b2, r2, b3, r3, b4, r4, b5, r5)

        await dp.bot.edit_message_text(message_id=message_to_edit_id, chat_id=message.from_user.id,
                                       text=f"–í–∞—à –±–æ—Ç –≤–∏–≥–ª—è–¥–∞—î —Ç–∞–∫:\n\n"
                                            f"<b>–ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b> {message.text}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 1:</b> {b1}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r1}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 2:</b> {b2}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r2}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 3:</b> {b3}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r3}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 4:</b> {b4}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r4}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 5:</b> {b5}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r5}\n\n", parse_mode="html",
                                       reply_markup=edit_bot_buttons)

        await state.finish()
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")


#–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏1
@dp.callback_query_handler(Text('b1'))
async def edit_b1(call: CallbackQuery, state: FSMContext):
    bot = await get_bot_id(call.message.chat.id)
    if bot != '' and bot != "No data":
        await call.message.answer("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ 1.\n–ê–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ üö´, –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏.")
        await edit_bott.b1.set()
        await state.update_data(message_id=call.message.message_id)
    else:
        await call.message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

@dp.message_handler(state=edit_bott.b1)
async def edit_button1(message: types.Message):

    bot = await get_bot_id(message.chat.id)
    if bot != '' and bot != "No data":
        try:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        except:
            pass

        try:
            await message.delete()
        except:
            pass
        bot_id = await get_bot_id(message.from_user.id)

        main = await get_main(bot_id)

        b1 = await get_button(bot_id, "1")
        r1 = await get_button_ref(bot_id, "1")

        b2 = await get_button(bot_id, "2")
        r2 = await get_button_ref(bot_id, "2")

        b3 = await get_button(bot_id, "3")
        r3 = await get_button_ref(bot_id, "3")

        b4 = await get_button(bot_id, "4")
        r4 = await get_button_ref(bot_id, "4")

        b5 = await get_button(bot_id, "5")
        r5 = await get_button_ref(bot_id, "5")

        await edit_bot(bot_id, main, message.text, r1, b2, r2, b3, r3, b4, r4, b5, r5)

        await message.answer("–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è\n<i>(–ø–æ—Å–∏–ª–∞–Ω–Ω—è –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ hhtps:// –∞–±–æ http://)</i>\n–ê–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ üö´, –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è.", parse_mode="html")
        await edit_bott.r1.set()
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

@dp.message_handler(state=edit_bott.r1)
async def edit_ref1(message: types.Message, state: FSMContext):
    data = await state.get_data()
    message_to_edit_id = data.get("message_id")

    bot = await get_bot_id(message.chat.id)
    if bot != '' and bot != "No data" and (message.text.startswith("https://") or message.text.startswith("http://") or message.text == "üö´"):
        try:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        except:
            pass

        try:
            await message.delete()
        except:
            pass
        bot_id = await get_bot_id(message.from_user.id)

        main = await get_main(bot_id)

        b1 = await get_button(bot_id, "1")
        r1 = await get_button_ref(bot_id, "1")

        b2 = await get_button(bot_id, "2")
        r2 = await get_button_ref(bot_id, "2")

        b3 = await get_button(bot_id, "3")
        r3 = await get_button_ref(bot_id, "3")

        b4 = await get_button(bot_id, "4")
        r4 = await get_button_ref(bot_id, "4")

        b5 = await get_button(bot_id, "5")
        r5 = await get_button_ref(bot_id, "5")

        await edit_bot(bot_id, main, b1, message.text, b2, r2, b3, r3, b4, r4, b5, r5)

        await dp.bot.edit_message_text(message_id=message_to_edit_id, chat_id=message.from_user.id,
                                       text=f"–í–∞—à –±–æ—Ç –≤–∏–≥–ª—è–¥–∞—î —Ç–∞–∫:\n\n"
                                            f"<b>–ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b> {main}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 1:</b> {b1}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {message.text}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 2:</b> {b2}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r2}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 3:</b> {b3}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r3}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 4:</b> {b4}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r4}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 5:</b> {b5}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r5}\n\n", parse_mode="html",
                                       reply_markup=edit_bot_buttons)

        await state.finish()
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ –∞–±–æ –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

#–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏2
@dp.callback_query_handler(Text('b2'))
async def edit_b2(call: CallbackQuery, state: FSMContext):
    bot = await get_bot_id(call.message.chat.id)
    if bot != '' and bot != "No data":
        await call.message.answer("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ 2.\n–ê–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ üö´, –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏.")
        await edit_bott.b2.set()
        await state.update_data(message_id=call.message.message_id)
    else:
        await call.message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

@dp.message_handler(state=edit_bott.b2)
async def edit_button2(message: types.Message):

    bot = await get_bot_id(message.chat.id)
    if bot != '' and bot != "No data":
        try:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        except:
            pass

        try:
            await message.delete()
        except:
            pass
        bot_id = await get_bot_id(message.from_user.id)

        main = await get_main(bot_id)

        b1 = await get_button(bot_id, "1")
        r1 = await get_button_ref(bot_id, "1")

        b2 = await get_button(bot_id, "2")
        r2 = await get_button_ref(bot_id, "2")

        b3 = await get_button(bot_id, "3")
        r3 = await get_button_ref(bot_id, "3")

        b4 = await get_button(bot_id, "4")
        r4 = await get_button_ref(bot_id, "4")

        b5 = await get_button(bot_id, "5")
        r5 = await get_button_ref(bot_id, "5")

        await edit_bot(bot_id, main, b1, r1, message.text, r2, b3, r3, b4, r4, b5, r5)

        await message.answer("–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è\n<i>(–ø–æ—Å–∏–ª–∞–Ω–Ω—è –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ hhtps:// –∞–±–æ http://)</i>\n–ê–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ üö´, –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è.", parse_mode="html")
        await edit_bott.r2.set()
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

@dp.message_handler(state=edit_bott.r2)
async def edit_ref2(message: types.Message, state: FSMContext):
    data = await state.get_data()
    message_to_edit_id = data.get("message_id")

    bot = await get_bot_id(message.chat.id)
    if bot != '' and bot != "No data" and (message.text.startswith("https://") or message.text.startswith("http://") or message.text == "üö´"):
        try:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        except:
            pass

        try:
            await message.delete()
        except:
            pass
        bot_id = await get_bot_id(message.from_user.id)

        main = await get_main(bot_id)

        b1 = await get_button(bot_id, "1")
        r1 = await get_button_ref(bot_id, "1")

        b2 = await get_button(bot_id, "2")
        r2 = await get_button_ref(bot_id, "2")

        b3 = await get_button(bot_id, "3")
        r3 = await get_button_ref(bot_id, "3")

        b4 = await get_button(bot_id, "4")
        r4 = await get_button_ref(bot_id, "4")

        b5 = await get_button(bot_id, "5")
        r5 = await get_button_ref(bot_id, "5")

        await edit_bot(bot_id, main, b1, r2, b2, message.text, b3, r3, b4, r4, b5, r5)

        await dp.bot.edit_message_text(message_id=message_to_edit_id, chat_id=message.from_user.id,
                                       text=f"–í–∞—à –±–æ—Ç –≤–∏–≥–ª—è–¥–∞—î —Ç–∞–∫:\n\n"
                                            f"<b>–ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b> {main}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 1:</b> {b1}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r1}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 2:</b> {b2}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {message.text}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 3:</b> {b3}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r3}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 4:</b> {b4}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r4}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 5:</b> {b5}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r5}\n\n", parse_mode="html",
                                       reply_markup=edit_bot_buttons)

        await state.finish()
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

#–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏3
@dp.callback_query_handler(Text('b3'))
async def edit_b3(call: CallbackQuery, state: FSMContext):
    bot = await get_bot_id(call.message.chat.id)
    if bot != '' and bot != "No data":
        await call.message.answer("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ 3.\n–ê–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ üö´, –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏.")
        await edit_bott.b3.set()
        await state.update_data(message_id=call.message.message_id)
    else:
        await call.message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

@dp.message_handler(state=edit_bott.b3)
async def edit_button3(message: types.Message):

    bot = await get_bot_id(message.chat.id)
    if bot != '' and bot != "No data":
        try:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        except:
            pass

        try:
            await message.delete()
        except:
            pass
        bot_id = await get_bot_id(message.from_user.id)

        main = await get_main(bot_id)

        b1 = await get_button(bot_id, "1")
        r1 = await get_button_ref(bot_id, "1")

        b2 = await get_button(bot_id, "2")
        r2 = await get_button_ref(bot_id, "2")

        b3 = await get_button(bot_id, "3")
        r3 = await get_button_ref(bot_id, "3")

        b4 = await get_button(bot_id, "4")
        r4 = await get_button_ref(bot_id, "4")

        b5 = await get_button(bot_id, "5")
        r5 = await get_button_ref(bot_id, "5")

        await edit_bot(bot_id, main, b1, r1, b2, r2, message.text, r3, b4, r4, b5, r5)

        await message.answer("–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è\n<i>(–ø–æ—Å–∏–ª–∞–Ω–Ω—è –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ hhtps:// –∞–±–æ http://)</i>\n–ê–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ üö´, –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è.", parse_mode="html")
        await edit_bott.r3.set()
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

@dp.message_handler(state=edit_bott.r3)
async def edit_ref3(message: types.Message, state: FSMContext):
    data = await state.get_data()
    message_to_edit_id = data.get("message_id")

    bot = await get_bot_id(message.chat.id)
    if bot != '' and bot != "No data" and (message.text.startswith("https://") or message.text.startswith("http://") or message.text == "üö´"):
        try:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        except:
            pass

        try:
            await message.delete()
        except:
            pass
        bot_id = await get_bot_id(message.from_user.id)

        main = await get_main(bot_id)

        b1 = await get_button(bot_id, "1")
        r1 = await get_button_ref(bot_id, "1")

        b2 = await get_button(bot_id, "2")
        r2 = await get_button_ref(bot_id, "2")

        b3 = await get_button(bot_id, "3")
        r3 = await get_button_ref(bot_id, "3")

        b4 = await get_button(bot_id, "4")
        r4 = await get_button_ref(bot_id, "4")

        b5 = await get_button(bot_id, "5")
        r5 = await get_button_ref(bot_id, "5")

        await edit_bot(bot_id, main, b1, r2, b2, r2, b3, message.text, b4, r4, b5, r5)

        await dp.bot.edit_message_text(message_id=message_to_edit_id, chat_id=message.from_user.id,
                                       text=f"–í–∞—à –±–æ—Ç –≤–∏–≥–ª—è–¥–∞—î —Ç–∞–∫:\n\n"
                                            f"<b>–ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b> {main}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 1:</b> {b1}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r1}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 2:</b> {b2}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r2}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 3:</b> {b3}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {message.text}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 4:</b> {b4}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r4}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 5:</b> {b5}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r5}\n\n", parse_mode="html",
                                       reply_markup=edit_bot_buttons)

        await state.finish()
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")


#–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏4
@dp.callback_query_handler(Text('b4'))
async def edit_b4(call: CallbackQuery, state: FSMContext):
    bot = await get_bot_id(call.message.chat.id)
    if bot != '' and bot != "No data":
        await call.message.answer("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ 4.\n–ê–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ üö´, –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏.")
        await edit_bott.b4.set()
        await state.update_data(message_id=call.message.message_id)
    else:
        await call.message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

@dp.message_handler(state=edit_bott.b4)
async def edit_button4(message: types.Message):

    bot = await get_bot_id(message.chat.id)
    if bot != '' and bot != "No data":
        try:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        except:
            pass

        try:
            await message.delete()
        except:
            pass
        bot_id = await get_bot_id(message.from_user.id)

        main = await get_main(bot_id)

        b1 = await get_button(bot_id, "1")
        r1 = await get_button_ref(bot_id, "1")

        b2 = await get_button(bot_id, "2")
        r2 = await get_button_ref(bot_id, "2")

        b3 = await get_button(bot_id, "3")
        r3 = await get_button_ref(bot_id, "3")

        b4 = await get_button(bot_id, "4")
        r4 = await get_button_ref(bot_id, "4")

        b5 = await get_button(bot_id, "5")
        r5 = await get_button_ref(bot_id, "5")

        await edit_bot(bot_id, main, b1, r1, b2, r2, b3, r3, message.text, r4, b5, r5)

        await message.answer("–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è\n<i>(–ø–æ—Å–∏–ª–∞–Ω–Ω—è –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ hhtps:// –∞–±–æ http://)</i>\n–ê–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ üö´, –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è.", parse_mode="html")
        await edit_bott.r4.set()
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

@dp.message_handler(state=edit_bott.r4)
async def edit_ref4(message: types.Message, state: FSMContext):
    data = await state.get_data()
    message_to_edit_id = data.get("message_id")

    bot = await get_bot_id(message.chat.id)
    if bot != '' and bot != "No data" and (message.text.startswith("https://") or message.text.startswith("http://") or message.text == "üö´"):
        try:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        except:
            pass

        try:
            await message.delete()
        except:
            pass
        bot_id = await get_bot_id(message.from_user.id)

        main = await get_main(bot_id)

        b1 = await get_button(bot_id, "1")
        r1 = await get_button_ref(bot_id, "1")

        b2 = await get_button(bot_id, "2")
        r2 = await get_button_ref(bot_id, "2")

        b3 = await get_button(bot_id, "3")
        r3 = await get_button_ref(bot_id, "3")

        b4 = await get_button(bot_id, "4")
        r4 = await get_button_ref(bot_id, "4")

        b5 = await get_button(bot_id, "5")
        r5 = await get_button_ref(bot_id, "5")

        await edit_bot(bot_id, main, b1, r2, b2, r2, b3, r3, b4, message.text, b5, r5)

        await dp.bot.edit_message_text(message_id=message_to_edit_id, chat_id=message.from_user.id,
                                       text=f"–í–∞—à –±–æ—Ç –≤–∏–≥–ª—è–¥–∞—î —Ç–∞–∫:\n\n"
                                            f"<b>–ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b> {main}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 1:</b> {b1}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r1}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 2:</b> {b2}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r2}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 3:</b> {b3}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r3}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 4:</b> {b4}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {message.text}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 5:</b> {b5}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r5}\n\n", parse_mode="html",
                                       reply_markup=edit_bot_buttons)

        await state.finish()
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")


#–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏5
@dp.callback_query_handler(Text('b5'))
async def edit_b4(call: CallbackQuery, state: FSMContext):
    bot = await get_bot_id(call.message.chat.id)
    if bot != '' and bot != "No data":
        await call.message.answer("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ 5.\n–ê–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ üö´, –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏.")
        await edit_bott.b5.set()
        await state.update_data(message_id=call.message.message_id)
    else:
        await call.message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

@dp.message_handler(state=edit_bott.b5)
async def edit_button5(message: types.Message):

    bot = await get_bot_id(message.chat.id)
    if bot != '' and bot != "No data":
        try:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        except:
            pass

        try:
            await message.delete()
        except:
            pass
        bot_id = await get_bot_id(message.from_user.id)

        main = await get_main(bot_id)

        b1 = await get_button(bot_id, "1")
        r1 = await get_button_ref(bot_id, "1")

        b2 = await get_button(bot_id, "2")
        r2 = await get_button_ref(bot_id, "2")

        b3 = await get_button(bot_id, "3")
        r3 = await get_button_ref(bot_id, "3")

        b4 = await get_button(bot_id, "4")
        r4 = await get_button_ref(bot_id, "4")

        b5 = await get_button(bot_id, "5")
        r5 = await get_button_ref(bot_id, "5")

        await edit_bot(bot_id, main, b1, r1, b2, r2, b3, r3, b4, r4, message.text, r5)

        await message.answer("–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è\n<i>(–ø–æ—Å–∏–ª–∞–Ω–Ω—è –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ hhtps:// –∞–±–æ http://)</i>\n–ê–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ üö´, –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è.", parse_mode="html")
        await edit_bott.r5.set()
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")

@dp.message_handler(state=edit_bott.r5)
async def edit_ref5(message: types.Message, state: FSMContext):
    data = await state.get_data()
    message_to_edit_id = data.get("message_id")

    bot = await get_bot_id(message.chat.id)
    if bot != '' and bot != "No data" and (message.text.startswith("https://") or message.text.startswith("http://") or message.text == "üö´"):
        try:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        except:
            pass

        try:
            await message.delete()
        except:
            pass
        bot_id = await get_bot_id(message.from_user.id)

        main = await get_main(bot_id)

        b1 = await get_button(bot_id, "1")
        r1 = await get_button_ref(bot_id, "1")

        b2 = await get_button(bot_id, "2")
        r2 = await get_button_ref(bot_id, "2")

        b3 = await get_button(bot_id, "3")
        r3 = await get_button_ref(bot_id, "3")

        b4 = await get_button(bot_id, "4")
        r4 = await get_button_ref(bot_id, "4")

        b5 = await get_button(bot_id, "5")
        r5 = await get_button_ref(bot_id, "5")

        await edit_bot(bot_id, main, b1, r2, b2, r2, b3, r3, b4, r4, b5, message.text)

        await dp.bot.edit_message_text(message_id=message_to_edit_id, chat_id=message.from_user.id,
                                       text=f"–í–∞—à –±–æ—Ç –≤–∏–≥–ª—è–¥–∞—î —Ç–∞–∫:\n\n"
                                            f"<b>–ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b> {main}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 1:</b> {b1}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r1}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 2:</b> {b2}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r2}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 3:</b> {b3}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r3}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 4:</b> {b4}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {r4}\n\n"
                                            f"<b>–ö–Ω–æ–ø–∫–∞ 5:</b> {b5}\n"
                                            f"<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</b> {message.text}\n\n", parse_mode="html",
                                       reply_markup=edit_bot_buttons)

        await state.finish()
    else:
        await message.answer("‚ùó–í–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤–æ–≥–æ –±–æ—Ç–∞ –∞–±–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ‚ùó\n–°—Ç–≤—Ä–æ—Ç–∏ –±–æ—Ç–∞ /create_bot")